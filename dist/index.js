"use strict";var e=require("react"),t=require("react-icons/ci"),o=require("react-icons/fa"),d=require("react/jsx-runtime");const i=(t,o)=>{const[d,i]=e.useState(""),[n,s]=e.useState(null);return{todoInput:d,setTodoInput:i,editingTodo:n,handleAddOrUpdateTodo:e=>{e.preventDefault(),d.trim()&&(n?(t({type:"changed",todo:{...n,text:d}}),s(null)):t({type:"added",id:crypto.randomUUID(),text:d}),i(""),o.current.focus())},handleEditTodo:e=>{i(e.text),s(e),o.current.focus()}}},n=e=>({handleDeleteTodo:t=>{e({type:"deleted",id:t})}}),s=e=>({handleToggleDone:t=>{e({type:"changed",todo:{...t,done:!t.done}})}});function r(e,t){switch(t.type){case"added":return[...e,{id:t.id,text:t.text,done:!1}];case"changed":return e.map(e=>e.id===t.todo.id?t.todo:e);case"deleted":return e.filter(e=>e.id!==t.id);default:throw Error("Unknown action: "+t.type)}}const a="ReactTodoComponents_Todos";exports.TodoList=({className:l="",storageKey:c=a,title:u="To-Do List",showFilters:h=!0,enablePersistence:m=!0,...x})=>{const[p,f]=e.useReducer(r,[],()=>m?((e=a)=>{try{const t=localStorage.getItem(e);return t?JSON.parse(t):[]}catch(e){return console.error("Error loading todos from localStorage:",e),[]}})(c):[]),[j,g]=e.useState("all"),b=e.useRef(null),{todoInput:N,setTodoInput:T,editingTodo:v,handleAddOrUpdateTodo:y,handleEditTodo:C}=i(f,b),{handleDeleteTodo:S}=n(f),{handleToggleDone:$}=s(f);e.useEffect(()=>{m&&((e,t=a)=>{try{localStorage.setItem(t,JSON.stringify(e))}catch(e){console.error("Error saving todos to localStorage:",e)}})(p,c)},[p,c,m]);const k=e.useMemo(()=>{switch(j){case"active":return p.filter(e=>!e.done);case"completed":return p.filter(e=>e.done);default:return p}},[p,j]);return d.jsx("div",{className:`todo-container ${l}`,id:"todo-container",...x,children:d.jsxs("div",{className:"todo-wrapper",id:"todo-wrapper",children:[d.jsx("h1",{className:"todo-title",id:"todo-title",children:u}),d.jsxs("form",{onSubmit:y,className:"todo-form",id:"todo-form",children:[d.jsx("input",{ref:b,type:"text",value:N,onChange:e=>T(e.target.value),placeholder:"Add a new todo...",className:"todo-input",id:"todo-input"}),d.jsx("button",{type:"submit",className:"todo-submit-btn",id:"todo-submit-btn",children:v?d.jsxs(d.Fragment,{children:[d.jsx(o.FaEdit,{size:20,id:"edit-icon"}),d.jsx("span",{id:"edit-text",children:"Update"})]}):d.jsxs(d.Fragment,{children:[d.jsx(t.CiCirclePlus,{size:20,id:"add-icon"}),d.jsx("span",{id:"add-text",children:"Add"})]})})]}),h&&p.length>0&&d.jsxs("div",{className:"filter-container",id:"filter-container",children:[d.jsx("button",{id:"filter-all",onClick:()=>g("all"),className:"filter-btn "+("all"===j?"active":""),children:"All"}),d.jsx("button",{id:"filter-active",onClick:()=>g("active"),className:"filter-btn "+("active"===j?"active":""),children:"Active"}),d.jsx("button",{id:"filter-completed",onClick:()=>g("completed"),className:"filter-btn "+("completed"===j?"active":""),children:"Completed"})]}),d.jsx("ul",{className:"todo-list",id:"todo-list",children:k.map(e=>d.jsxs("li",{className:"todo-item",id:`todo-item-${e.id}`,children:[d.jsxs("div",{className:"todo-content",id:`todo-content-${e.id}`,children:[d.jsx("input",{id:`todo-checkbox-${e.id}`,type:"checkbox",checked:e.done,onChange:()=>$(e)}),d.jsx("div",{className:"todo-text "+(e.done?"completed":""),id:`todo-text-${e.id}`,children:e.text})]}),d.jsxs("div",{className:"todo-actions",id:`todo-actions-${e.id}`,children:[d.jsx("button",{id:`edit-btn-${e.id}`,onClick:()=>C(e),className:"action-btn",title:"Edit todo",children:d.jsx(o.FaEdit,{size:20,id:`edit-icon-${e.id}`})}),d.jsx("button",{id:`delete-btn-${e.id}`,onClick:()=>S(e.id),className:"action-btn",title:"Delete todo",children:d.jsx(o.FaRegTrashAlt,{size:20,id:`delete-icon-${e.id}`})})]})]},e.id))})]})})},exports.todosReducer=r,exports.useAddTodo=i,exports.useChangeTodo=s,exports.useDeleteTodo=n;
//# sourceMappingURL=index.js.map
