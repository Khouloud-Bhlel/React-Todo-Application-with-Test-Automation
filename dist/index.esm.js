import{useState as t,useReducer as e,useRef as o,useEffect as d,useMemo as i}from"react";import{CiCirclePlus as n}from"react-icons/ci";import{FaEdit as l,FaRegTrashAlt as c}from"react-icons/fa";import{jsx as a,jsxs as r,Fragment as s}from"react/jsx-runtime";const m=(e,o)=>{const[d,i]=t(""),[n,l]=t(null);return{todoInput:d,setTodoInput:i,editingTodo:n,handleAddOrUpdateTodo:t=>{t.preventDefault(),d.trim()&&(n?(e({type:"changed",todo:{...n,text:d}}),l(null)):e({type:"added",id:crypto.randomUUID(),text:d}),i(""),o.current.focus())},handleEditTodo:t=>{i(t.text),l(t),o.current.focus()}}},h=t=>({handleDeleteTodo:e=>{t({type:"deleted",id:e})}}),p=t=>({handleToggleDone:e=>{t({type:"changed",todo:{...e,done:!e.done}})}});function u(t,e){switch(e.type){case"added":return[...t,{id:e.id,text:e.text,done:!1}];case"changed":return t.map(t=>t.id===e.todo.id?e.todo:t);case"deleted":return t.filter(t=>t.id!==e.id);default:throw Error("Unknown action: "+e.type)}}const f="ReactTodoComponents_Todos",b=({className:b="",storageKey:g=f,title:N="To-Do List",showFilters:v=!0,enablePersistence:x=!0,...T})=>{const[y,$]=e(u,[],()=>x?((t=f)=>{try{const e=localStorage.getItem(t);return e?JSON.parse(e):[]}catch(t){return console.error("Error loading todos from localStorage:",t),[]}})(g):[]),[k,C]=t("all"),w=o(null),{todoInput:D,setTodoInput:I,editingTodo:S,handleAddOrUpdateTodo:A,handleEditTodo:E}=m($,w),{handleDeleteTodo:U}=h($),{handleToggleDone:z}=p($);d(()=>{x&&((t,e=f)=>{try{localStorage.setItem(e,JSON.stringify(t))}catch(t){console.error("Error saving todos to localStorage:",t)}})(y,g)},[y,g,x]);const O=i(()=>{switch(k){case"active":return y.filter(t=>!t.done);case"completed":return y.filter(t=>t.done);default:return y}},[y,k]);return a("div",{className:`todo-container ${b}`,id:"todo-container",...T,children:r("div",{className:"todo-wrapper",id:"todo-wrapper",children:[a("h1",{className:"todo-title",id:"todo-title",children:N}),r("form",{onSubmit:A,className:"todo-form",id:"todo-form",children:[a("input",{ref:w,type:"text",value:D,onChange:t=>I(t.target.value),placeholder:"Add a new todo...",className:"todo-input",id:"todo-input"}),a("button",{type:"submit",className:"todo-submit-btn",id:"todo-submit-btn",children:r(s,S?{children:[a(l,{size:20,id:"edit-icon"}),a("span",{id:"edit-text",children:"Update"})]}:{children:[a(n,{size:20,id:"add-icon"}),a("span",{id:"add-text",children:"Add"})]})})]}),v&&y.length>0&&r("div",{className:"filter-container",id:"filter-container",children:[a("button",{id:"filter-all",onClick:()=>C("all"),className:"filter-btn "+("all"===k?"active":""),children:"All"}),a("button",{id:"filter-active",onClick:()=>C("active"),className:"filter-btn "+("active"===k?"active":""),children:"Active"}),a("button",{id:"filter-completed",onClick:()=>C("completed"),className:"filter-btn "+("completed"===k?"active":""),children:"Completed"})]}),a("ul",{className:"todo-list",id:"todo-list",children:O.map(t=>r("li",{className:"todo-item",id:`todo-item-${t.id}`,children:[r("div",{className:"todo-content",id:`todo-content-${t.id}`,children:[a("input",{id:`todo-checkbox-${t.id}`,type:"checkbox",checked:t.done,onChange:()=>z(t)}),a("div",{className:"todo-text "+(t.done?"completed":""),id:`todo-text-${t.id}`,children:t.text})]}),r("div",{className:"todo-actions",id:`todo-actions-${t.id}`,children:[a("button",{id:`edit-btn-${t.id}`,onClick:()=>E(t),className:"action-btn",title:"Edit todo",children:a(l,{size:20,id:`edit-icon-${t.id}`})}),a("button",{id:`delete-btn-${t.id}`,onClick:()=>U(t.id),className:"action-btn",title:"Delete todo",children:a(c,{size:20,id:`delete-icon-${t.id}`})})]})]},t.id))})]})})};export{b as TodoList,u as todosReducer,m as useAddTodo,p as useChangeTodo,h as useDeleteTodo};
//# sourceMappingURL=index.esm.js.map
